#!/bin/bash

# Kubernetes Tools - Copyright (C) 2017 Shawn Wang
# https://github.com/shawnxlw/kubernetes-tools
#
# You may use, distribute or modify this software under the terms of the MIT license.
BUSY_BOX_URL="https://busybox.net/downloads/binaries/1.27.1-i686/busybox"
BUSY_BOX_SHA="b51b9328eb4e60748912e1c1867954a5cf7e9d5294781cae59ce225ed110523c"
BUSY_BOX_PATH="/tmp/${BUSY_BOX_SHA}"

source __common

# if the busybox directory doesn't exist, download busybox
function get_busybox() {
  if [[ ! -d $BUSY_BOX_PATH ]]; then
    echo "No busybox present, downloading..."
    mkdir $BUSY_BOX_PATH && cd $BUSY_BOX_PATH
    curl -sSo busybox $BUSY_BOX_URL
  fi
}

function copy_tools() {
  local my_context
  local my_namespace
  my_context=$(current_context)
  my_namespace=$(current_namespace)

  # check/download busybox
  get_busybox
  # checkout shasum
  echo "${BUSY_BOX_SHA}  ${BUSY_BOX_PATH}/busybox" | shasum -ca 256 - > /dev/null

  pod=$1
  PS3="Please select a container:"
  # exit if pod not found
  if ! kubectl get pod --context="${my_context}" --namespace="${my_namespace}" $pod > /dev/null; then exit 1; fi

  containers=($(kubectl get pod --context=\"${my_context}\" --namespace=\"${my_namespace}\" $pod -o jsonpath='{.spec.containers[*].name}'))

  # if there is only one container, get a shell
  if [[ ${#containers[@]} -eq 1 ]] ; then
    selected_container=$containers
  else
    # if there are more than one container, prompt select
    select container in "${containers[@]}"
    do
      selected_container=$container
      break
    done
  fi

  # copy busybox
  dir=`dirname $0`
  echo $dir
  echo -e "\nCopying tools to container $selected_container...\n"
  kubectl cp --context="${my_context}" --namespace="${my_namespace}" $BUSY_BOX_PATH/busybox $namespace/$pod:/tmp -c $selected_container
  # setup busybox
  kubectl exec --context="${my_context}" --namespace="${my_namespace}" $pod -c $selected_container -ti -- sh -c "chmod 755 /tmp/busybox && /tmp/busybox --install /usr/bin"

  echo -e "\nGetting you a shell in $selected_container...\n"
  # if bash doesn't work, try sh
  kubectl exec --context="${my_context}" --namespace="${my_namespace}" $pod -c $selected_container -ti bash 2>/dev/null || kubectl exec $pod -c $selected_container -ti sh
  exit 0
}

# show help
show_help() {
  echo -e $__title
  echo
  echo -e "- Copy common CLI tools to selected container in specified pod: ${__style_underlined}kcopy [pod_name]\n${__style_end}"
}

# parse arguments
while [ "$1" != "" ]; do
  case $1 in
    -n | --namespace ) shift
      copy_tools $1
      ;;
    -h | --help ) shift
      show_help
      exit 0
      ;;
    * ) copy_tools $1
  esac
  shift
done

# prompt pod selection if no arguments
if [ $# -eq 0 ]; then show_help; fi
